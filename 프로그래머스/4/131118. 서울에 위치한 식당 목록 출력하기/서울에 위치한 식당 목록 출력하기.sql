-- 코드를 입력하세요
# SELECT
#     I.REST_ID AS REST_ID,
#     I.REST_NAME AS REST_NAME,
#     I.FOOD_TYPE AS FOOD_TYPE,
#     I.FAVORITES AS FAVORITES,
#     I.ADDRESS AS ADDRESS,
#     ROUND(AVG(R.REVIEW_SCORE), 2) AS SCORE
# FROM REST_INFO AS I
#     JOIN REST_REVIEW AS R
#         ON I.REST_ID = R.REST_ID
# WHERE I.ADDRESS LIKE '서울%'
# GROUP BY REST_ID
# ORDER BY SCORE DESC, FAVORITES DESC

# SELECT REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ADDRESS, 
#     (SELECT ROUND(AVG(REVIEW_SCORE),2)
#              FROM REST_REVIEW
#              WHERE REST_INFO.REST_ID = REST_REVIEW.REST_ID) AS SCORE
# FROM REST_INFO
# WHERE ADDRESS LIKE '서울%'
# ORDER BY SCORE DESC, FAVORITES DESC;

SELECT 
    A.REST_ID,
    A.REST_NAME,
    A.FOOD_TYPE,
    A.FAVORITES,
    A.ADDRESS as address,
    (
    SELECT 
        ROUND(AVG(B.REVIEW_SCORE),2)
        FROM REST_REVIEW B
        WHERE A.REST_ID = B.REST_ID 
        GROUP BY B.REST_ID
        HAVING ROUND(AVG(B.REVIEW_SCORE),2) IS NOT NULL
    ) AS SCORE
FROM REST_INFO A
WHERE ADDRESS LIKE('서울%') 
having SCORE is not null
ORDER BY SCORE DESC, A.FAVORITES DESC